#BlueJ class context
comment0.target=MovableSettingActor
comment0.text=\r\n\ @Marcus\ A.\r\n\ \r\n\ Abstract\ class\ from\ which\ setting\ actors\ extend\ from.\r\n\ Stored\ in\ a\ MovableSetting\ class.\r\n
comment1.params=
comment1.target=void\ act()
comment1.text=\r\n\ Although\ extends\ Actor,\ act()\ is\ not\ used\r\n\ and\ does\ nothing\ because\ each\ MovableSettingActor\ \r\n\ needs\ to\ act\ with\ the\ rest\ of\ the\ setting,\ \r\n\ not\ by\ itself.\r\n
comment2.params=speed
comment2.target=int\ moveWithSetting(int)
comment2.text=\r\n\ This\ method\ is\ called\ within\ MovableSetting.\r\n\ Moves\ object\ depending\ on\ user\ input\ and\r\n\ by\ a\ given\ int\ speed.\ Returns\ the\ direction\r\n\ moved\ (KEY_RIGHT\ or\ KEY_LEFT).\r\n
comment3.params=dist
comment3.target=void\ correctMove(int)
comment3.text=\r\n\ This\ method\ is\ called\ within\ MovableSetting\r\n\ whenever\ a\ blocking\ actor\ moves\ into\ the\ player.\r\n\ After\ finding\ the\ distance\ that\ needs\ to\ be\r\n\ corrcted,\ this\ method\ is\ called\ for\ actors\r\n\ that\ had\ already\ moved,\ essentially\ correcting\r\n\ it\ too.\r\n
comment4.params=currentSpeed\ dir
comment4.target=int\ findClosestLegalPosition(int,\ int)
comment4.text=\r\n\ This\ method\ is\ called\ within\ MovableSetting\r\n\ if\ this\ isBlocking(),\ then\ finds\ and\ moves\r\n\ this\ actor\ to\ a\ legal\ position\ after\ taking\r\n\ the\ needed\ contextual\ integers.\ It\ then\ returns\r\n\ the\ distance\ that\ was\ moved\ so\ that\ MovableSetting\r\n\ can\ change\ already\ moved\ actors\ and\ so\ it\ can\r\n\ calculate\ the\ correct\ distance\ for\ the\ rest\ of\r\n\ the\ actors\ to\ move.\r\n
comment5.params=
comment5.target=boolean\ isBlocking()
comment5.text=\r\n\ Abstract\ method\ that\ is\ defined\ in\ subclasses.\r\n\ Defines\ whether\ that\ class\ should\ block\ the\r\n\ player\ from\ moving\ through\ them.\r\n
numComments=6
